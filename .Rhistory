scale_x_discrete(name = "Date") +
scale_y_continuous(name = "Net Sentiment Score", breaks=c(-.0002,-.0001, 0, .0001, .0002))
p
p <- ggplot(data = data_matrix, aes(x = data_matrix[,2], y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_discrete(name = "Date") +
scale_y_continuous(name = "Net Sentiment Score", breaks=c(-.0002,-.0001, 0, .0001, .0002))
p
sort(date_scores_matrix[,1], decreasing = FALSE)
p <- ggplot(data = data_matrix, aes(x = data_matrix[,2], y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_discrete(name = "Date") +
scale_y_continuous(name = "Net Sentiment Score", breaks=c(-.0002, 0, .0001, .0002, .001, .003, .004))
p
p <- ggplot(data = data_matrix, aes(x = data_matrix[,2], y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_discrete(name = "Date") +
scale_y_continuous(name = "Net Sentiment Score", breaks=c(-.0002, 0, .0001, .0002, .001, .003, .004))
p
p <- ggplot(data = data_matrix, aes(x = data_matrix[,2], y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_discrete(name = "Date") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix, aes(x = as.numeric(data_matrix[,2]), y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_continuous(name = "Date") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix, aes(x = data_matrix[,2], y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix, aes(x = as.date(data_matrix[,2]), y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 year") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = as.numeric(data_matrix[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 year") +
scale_y_continuous(name = "Net Sentiment Score", breaks = waiver(), n.breaks = 15)
p
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = data_matrix[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 year") +
scale_y_continuous(name = "Net Sentiment Score", breaks = waiver(), n.breaks = 15)
p
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = data_matrix[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 year") +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver(), n.breaks = 15)
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = data_matrix[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 year") +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
date_scores_matrix
## [Added from DG] Plot the data
par(mfrow=c(1,1))
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = data_matrix[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
data_matrix <- data.frame()
data_matrix[,1] <- as.Date(date_scores_matrix[,2])
data_matrix <- data.frame(0, length(date_scores_matrix),2)
data_matrix[,1] <- as.Date(date_scores_matrix[,2])
data_matrix <- data.frame(0, dim(date_scores_matrix)[1],2)
data_matrix[,1] <- as.Date(date_scores_matrix[,2])
View(data_matrix)
as.data.frame(date_scores_matrix)
data_matrix <- as.data.frame(date_scores_matrix)
## [Added from DG] Plot the data
par(mfrow=c(1,1))
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = data_matrix[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
2020_flag <- grep("2020", data_matrix[,1])
flag_2020 <- grep("2020", data_matrix[,1])
flag_2020 <- grepl("2020", data_matrix[,1])
data_matrix_2020 <- data_matrix[flag_2020]
data_matrix_2020 <- data_matrix[flag_2020,]
data_matrix_2020
data_matrix_2020 <- data_matrix[flag_2020,2]
data_matrix_2020
data_matrix_2020 <- data_matrix[,2]=="2020"
data_matrix_2020
data_matrix_2020 <- data_matrix[,1]=="2020"
data_matrix_2020
data_matrix_2020 <- data_matrix[,1]=="2020-*"
data_matrix_2020
data_matrix_2020 <- data_matrix[,1]=="2020-03-27"
data_matrix_2020
data_matrix[1]
data_matrix[,2]
data_matrix_2020 <- data_matrix[,2]=="2020-03-27"
data_matrix_2020
data_matrix_2020 <- data_matrix[,2]=="2020-*"
data_matrix_2020
flag_2020 <- grepl("2020", data_matrix[,2])
flag_2020
# Set new matrix with only 2020 data
data_matrix_2020 <- data_matrix[flag_2020]
# Set new matrix with only 2020 data
data_matrix_2020 <- data_matrix[,flag_2020]
# Set new matrix with only 2020 data
data_matrix_2020 <- matrix(0, length(flag_2020),2)
data_matrix_2020 <- data_matrix[,flag_2020]
# Set new matrix with only 2020 data
length(flag_2020)
# Set new matrix with only 2020 data
sum(flag_2020)
data_matrix_2020 <- matrix(0, sum(flag_2020),2)
for (i in 1:sum(flag_2020)){
data_matrix_2020[i,] <- data_matrix[i,flag_2020]
}
# Set flag for only 2020
flag_2020 <- grepl("2020", date_scores_matrix[,2])
# Set new matrix with only 2020 data
data_matrix_2020 <- matrix(0, sum(flag_2020),2)
for (i in 1:sum(flag_2020)){
data_matrix_2020[i,] <- data_matrix[i,flag_2020]
}
for (i in 1:sum(flag_2020)){
data_matrix_2020[i,] <- date_scores_matrix[i,flag_2020]
}
data_matrix_2020[flag_2020] <- date_scores_matrix[flag_2020,1]
sort(date_scores_matrix[,1], decreasing = FALSE)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,2], decreasing = FALSE)
date_scores_matrix[flag_2020] <- date_scores_matrix[flag_2020,1]
date_scores_matrix
# Create matrix for unique dates and sentiment scores for those dates
date_scores_matrix <- matrix(0, length(unique(sentiment_scores_matrix[,2])), 2)
date_scores_matrix[,2] <- unique(sentiment_scores_matrix[,2])
date_scores_matrix
dim(date_scores_matrix)[1]
count <- 0
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
head(date_scores_matrix)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
sort(date_scores_matrix[,2], decreasing = FALSE)
# Set flag for only 2020
flag_2020 <- grepl("2020", date_scores_matrix[,2])
# Set new matrix with only 2020 data
data_matrix_2020 <- matrix(0, sum(flag_2020),2)
date_scores_matrix[flag_2020] <- date_scores_matrix[1,flag_2020]
date_scores_matrix <- date_scores_matrix[flag_2020]
date_scores_matrix
date_scores_matrix[1,] <- date_scores_matrix[flag_2020]
date_scores_matrix[1,] <- date_scores_matrix[flag_2020,]
date_scores_matrix[,2] <- date_scores_matrix[,flag_2020]
date_scores_matrix
# Create matrix for unique dates and sentiment scores for those dates
date_scores_matrix <- matrix(0, length(unique(sentiment_scores_matrix[,2])), 2)
date_scores_matrix[,2] <- unique(sentiment_scores_matrix[,2])
date_scores_matrix
dim(date_scores_matrix)[1]
count <- 0
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
head(date_scores_matrix)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
# Put scores and dates into data frame format
data_matrix <- as.data.frame(date_scores_matrix)
p <- ggplot(data = data_matrix, aes(x = as.Date(data_matrix[,2]), y = data_matrix[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
data_matrix
subset(data_matrix, V2="2020", select=V1)
subset(data_matrix, V2="2020-.*", select=V1)
data_matrix[grep("2020-", data_matrix[,2]),]
data_matrix_2020 <- data_matrix[grep("2020-", data_matrix[,2]),]
## [Added from DG] Plot the data
par(mfrow=c(1,1))
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2],"%Y-%m-%d"), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
date_scores_matrix[,2] <- unique(as.Date(sentiment_scores_matrix[,2]))
date_scores_matrix
dim(date_scores_matrix)[1]
count <- 0
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
head(date_scores_matrix)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
# Put scores and dates into data frame format
data_matrix <- as.data.frame(date_scores_matrix)
data_matrix_2020 <- data_matrix[grep("2020-", data_matrix[,2]),]
## [Added from DG] Plot the data
par(mfrow=c(1,1))
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2],"%Y-%m-%d"), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
date_scores_matrix[,2] <- unique((sentiment_scores_matrix[,2]))
date_scores_matrix
date_scores_matrix[,2] <- as.Date(date_scores_matrix[,2])
date_scores_matrix
date_scores_matrix[,2] <- as.Date(date_scores_matrix[,2], "%Y-%m-%d")
date_scores_matrix
# Create matrix for unique dates and sentiment scores for those dates
date_scores_matrix <- matrix(0, length(unique(sentiment_scores_matrix[,2])), 2)
date_scores_matrix[,2] <- unique((sentiment_scores_matrix[,2]))
date_scores_matrix
dim(date_scores_matrix)[1]
count <- 0
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
head(date_scores_matrix)
inspect(date_scores_matrix)
View(date_scores_matrix)
View(date_scores_matrix)
# Put scores and dates into data frame format
data_matrix <- as.data.frame(date_scores_matrix)
data_matrix
data_matrix_2020 <- data_matrix[grep("2020-", data_matrix[,2]),]
data_matrix_2020
## [Added from DG] Plot the data
par(mfrow=c(1,1))
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2]), y = data_matrix_2020[,1]) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month", limits = c("2020-01-01", "2020-05-01")) +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2]), y = data_matrix_2020[,1]) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2]), y = data_matrix_2020[,1]) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2]), y = data_matrix_2020[,1]) +
geom_point() #+
#scale_x_date(name = "Date", date_breaks = "1 month") +
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2], y = data_matrix_2020[,1])) +
geom_point() #+
#scale_x_date(name = "Date", date_breaks = "1 month") +
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2], y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2], y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") +
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = data_matrix_2020[,2], y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") #+
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 month") #+
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") #+
#scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") #+
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_discrete(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.NUmeric(data_matrix_2020[,1])) +
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.Numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.Numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score", breaks = waiver())
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_discrete(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_discrete(name = "Net Sentiment Score", breaks=5)
p
# Create matrix for unique dates and sentiment scores for those dates
date_scores_matrix <- matrix(0, length(unique(sentiment_scores_matrix[,2])), 2)
date_scores_matrix[,2] <- unique((sentiment_scores_matrix[,2]))
date_scores_matrix
dim(date_scores_matrix)[1]
count <- 0
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
#date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
date_scores_matrix[i,1] <- (date_scores_matrix[i,1]) + (sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
head(date_scores_matrix)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
# Convert to TDM format
tdm_covid_article_text = TermDocumentMatrix(vc_covid_6)
# Remove sparse terms
tdm_covid_article_text <- removeSparseTerms(tdm_covid_article_text, .99)
# Require dictionaries for sentiment
require("tm.lexicon.GeneralInquirer")
# Calculate pos and neg scores for the GI dictionaries
score_ge_pos <- tm_term_score(tdm_covid_article_text, terms_in_General_Inquirer_categories("Positiv"))
score_ge_neg <- tm_term_score(tdm_covid_article_text, terms_in_General_Inquirer_categories("Negativ"))
# Sum the total number of words
allwords <- colSums(as.matrix(tdm_covid_article_text))
# Calculate the positive, negative, and overall sentiments for this corpora using GI
sentiment_pos_ge <- score_ge_pos/allwords
sentiment_neg_ge <- score_ge_neg/allwords
sentiment_net_ge <- (sentiment_pos_ge - sentiment_neg_ge)/allwords
# Debug - check sentiment matrices
sentiment_net_ge
# Get Dates
dates <- na.omit(news$data)
# Create matrix for sentiment scores and dates
sentiment_scores_matrix <- matrix(0, length(article_text), 2)
# Save sentiment and sate scores in matrix
sentiment_scores_matrix[,1] <- sentiment_net_ge
sentiment_scores_matrix[,2] <- dates
# Debug - see number of unique dates
summary(as.factor(sentiment_scores_matrix[,2]))
# Create matrix for unique dates and sentiment scores for those dates
date_scores_matrix <- matrix(0, length(unique(sentiment_scores_matrix[,2])), 2)
date_scores_matrix[,2] <- unique((sentiment_scores_matrix[,2]))
date_scores_matrix
dim(date_scores_matrix)[1]
count <- 0
for (i in 1:dim(date_scores_matrix)[1]){
cat("date:", date_scores_matrix[i,2], "iteration:", i, "of", dim(date_scores_matrix)[1],"\n" )
for (j in 1:dim(sentiment_scores_matrix)[1]){
if(sentiment_scores_matrix[j,2]==date_scores_matrix[i,2]){
cat("match", date_scores_matrix[i,2], "\n")
count <- count + 1
date_scores_matrix[i,1] <- as.numeric(date_scores_matrix[i,1]) + as.numeric(sentiment_scores_matrix[j,1])
cat("sum:", date_scores_matrix[i,1], "\n")
}
}
}
head(date_scores_matrix)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
sort(date_scores_matrix[,1], decreasing = FALSE)
sort(as.numeric(date_scores_matrix[,1]), decreasing = FALSE)
data_matrix_2020[,1] <- as.numeric(as.character(data_matrix_2020[,1]))
data_matrix_2020[,1] <- as.numeric(as.character(data_matrix_2020[,1]))
## [Added from DG] Plot the data
par(mfrow=c(1,1))
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = as.numeric(data_matrix_2020[,1]))) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_discrete(name = "Net Sentiment Score", breaks=5)
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score", breaks=5)
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", %W) +
scale_y_continuous(name = "Net Sentiment Score")
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels= %W) +
scale_y_continuous(name = "Net Sentiment Score")
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels= %W) +
scale_y_continuous(name = "Net Sentiment Score")
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels= "%Y-%W") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels= "%W") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels= "%b %d") +
scale_y_continuous(name = "Net Sentiment Score")
p
p <- ggplot(data = data_matrix_2020, aes(x = as.Date(data_matrix_2020[,2]), y = data_matrix_2020[,1])) +
geom_point() +
scale_x_date(name = "Date", date_breaks = "1 week", date_labels= "%b %d") +
scale_y_continuous(name = "Net Sentiment Score")+
ggtitle("Net Sentiment of Covid Articles in 2020")
p
